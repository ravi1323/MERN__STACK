{"version":3,"sources":["redux/actions/errorActions.js","redux/actions/types.js","redux/actions/itemAction.js","redux/actions/authActions.js","components/auth/signinModal.js","components/auth/signupModal.js","components/auth/logout.js","components/layout/AppNavbar.js","components/dashboard/ItemModel.js","components/dashboard/ShoppingList.js","App.js","serviceWorker.js","redux/reducers/itemReducer.js","redux/reducers/errorReducer.js","redux/reducers/authReducer.js","redux/reducers/RootReducer.js","redux/store/store.js","index.js"],"names":["returnError","msg","status","id","type","payload","clearError","getItem","dispatch","getState","axios","get","tokenConfig","then","res","data","catch","err","token","auth","config","headers","SigninModal","state","email","password","isOpen","componentDidUpdate","prevProps","error","props","setState","message","isAuthenticated","toggle","handleChange","e","target","value","handleSubmit","preventDefault","user","login","NavLink","href","onClick","this","Modal","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","onChange","placeholder","Button","className","Component","connect","isAuthentication","body","JSON","stringify","post","response","SignupModal","username","newUser","register","Logout","logout","AppNavbar","authLink","NavItem","guestLink","Navbar","color","dark","expand","Container","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","ItemModel","modal","name","setValueToState","onSubmitHandle","event","addItem","Math","random","style","marginBottom","item","ShoppingList","componentDidMount","remove","deleteItem","items","authContent","ListGroup","TransitionGroup","map","CSSTransition","key","_id","timeout","classNames","ListGroupItem","unAuthMessage","delete","App","store","Boolean","window","location","hostname","match","initialState","intialState","localStorage","isLoading","combineReducers","actions","filter","setItem","removeItem","middleware","thunk","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.9723cabc.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS } from \"./types\";\r\n\r\nexport const returnError = (msg, status, id, type) => {\r\n  return {\r\n    type: GET_ERRORS,\r\n    payload: { msg, status, id, type },\r\n  };\r\n};\r\n\r\nexport const clearError = () => {\r\n  return {\r\n    type: CLEAR_ERRORS,\r\n  };\r\n};\r\n","export const GET_ITEMS = \"GET_ITEMS\";\r\nexport const ADD_ITEM = \"ADD_ITEM\";\r\nexport const DELETE_ITEM = \"DELETE_ITEM\";\r\n\r\n//for authorization\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, AUTH_ERROR } from \"./types\";\r\nimport { tokenConfig } from \"./authActions\";\r\nimport axios from \"axios\";\r\n\r\nexport const getItem = () => (dispatch, getState) => {\r\n  axios\r\n    .get(\"/api/items\", tokenConfig(getState))\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_ITEMS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n      });\r\n    });\r\n};\r\n\r\nexport const addItem = (item) => (dispatch, getState) => {\r\n  axios\r\n    .post(\"/api/items\", { item: item.name }, tokenConfig(getState))\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ADD_ITEM,\r\n        payload: res.data,\r\n      });\r\n    });\r\n};\r\n\r\nexport const deleteItem = (id) => (dispatch, getState) => {\r\n  axios.delete(`/api/items/${id}`, tokenConfig(getState)).then((res) => {\r\n    dispatch({\r\n      type: DELETE_ITEM,\r\n      payload: id,\r\n    });\r\n  });\r\n};\r\n","import axios from \"axios\";\r\nimport { returnError } from \"./errorActions\";\r\nimport { getItem } from \"./itemAction\";\r\nimport {\r\n  USER_LOADED,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  LOGOUT_SUCCESS,\r\n  AUTH_ERROR,\r\n} from \"./types\";\r\n\r\nexport const loadUser = () => (dispatch, getState) => {\r\n  dispatch({\r\n    type: USER_LOADED,\r\n  });\r\n\r\n  axios\r\n    .get(\"/api/auth/getuser\", tokenConfig(getState))\r\n    .then((res) => {\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data.user,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(returnError(err.response.data, err.response.status));\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n      });\r\n    });\r\n};\r\n\r\nexport const tokenConfig = (getState) => {\r\n  const token = getState().auth.token;\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  if (token) {\r\n    config.headers[\"Authorization\"] = token;\r\n  }\r\n  return config;\r\n};\r\n\r\nexport const register = ({ username, email, password }) => (dispatch) => {\r\n  //headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // request body\r\n  const body = JSON.stringify({ username, email, password });\r\n  axios\r\n    .post(\"/api/auth/signup\", body, config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      getItem();\r\n    })\r\n    .catch((err) => {\r\n      dispatch(\r\n        returnError(\r\n          err.response.data.message,\r\n          err.response.status,\r\n          \"REGISTER_FAIL\",\r\n          err.response.data.type\r\n        )\r\n      );\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n    });\r\n};\r\n\r\nexport const login = ({ email, password }) => (dispatch) => {\r\n  //headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // request body\r\n  const body = JSON.stringify({ email, password });\r\n  axios\r\n    .post(\"/api/auth/signin\", body, config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      getItem();\r\n    })\r\n    .catch((err) => {\r\n      dispatch(\r\n        returnError(\r\n          err.response.data.message,\r\n          err.response.status,\r\n          \"LOGIN_FAIL\",\r\n          err.response.data.type\r\n        )\r\n      );\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n    });\r\n};\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: LOGOUT_SUCCESS,\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  NavLink,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../redux/actions/authActions\";\r\nimport { clearError } from \"../../redux/actions/errorActions\";\r\n\r\nclass SigninModal extends Component {\r\n  state = {\r\n    email: null,\r\n    password: null,\r\n    isOpen: false,\r\n  };\r\n\r\n  componentDidUpdate = (prevProps) => {\r\n    const { error } = this.props;\r\n    if (error !== prevProps.error) {\r\n      if (error.id === \"LOGIN_FAIL\") {\r\n        this.setState({\r\n          msg: error.message,\r\n          type: error.type,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          msg: null,\r\n          type: null,\r\n        });\r\n      }\r\n    }\r\n    const { isAuthenticated } = this.props;\r\n    if (this.state.isOpen) {\r\n      if (isAuthenticated) {\r\n        this.toggle();\r\n      }\r\n    }\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = this.state;\r\n    const user = {\r\n      email,\r\n      password,\r\n    };\r\n    //attempt to login\r\n    this.props.login(user);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavLink href=\"#\" onClick={this.toggle}>\r\n          SignIn\r\n        </NavLink>\r\n        <Modal isOpen={this.state.isOpen} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Signin User</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <FormGroup>\r\n                <Label htmlFor=\"email\">Email</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Email\"\r\n                />\r\n                {this.state.type !== null && this.state.type === \"email\" ? (\r\n                  <small>{this.state.msg}</small>\r\n                ) : null}\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"password\">Password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Password\"\r\n                />\r\n                {this.state.type !== null && this.state.type === \"password\" ? (\r\n                  <small>{this.state.msg}</small>\r\n                ) : null}\r\n              </FormGroup>\r\n              <Button type=\"submit\" className=\"w-100\">\r\n                SignIn\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthentication: state.auth.isAuthenticated,\r\n  error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login, clearError })(SigninModal);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  NavLink,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { register } from \"../../redux/actions/authActions\";\r\nimport { clearError } from \"../../redux/actions/errorActions\";\r\n\r\nclass SignupModal extends Component {\r\n  state = {\r\n    username: null,\r\n    email: null,\r\n    password: null,\r\n    isOpen: false,\r\n    msg: null,\r\n    type: null,\r\n  };\r\n  componentDidUpdate = (prevProps) => {\r\n    const { error } = this.props;\r\n    if (error !== prevProps.error) {\r\n      if (error.id === \"REGISTER_FAIL\") {\r\n        this.setState({\r\n          msg: error.message,\r\n          type: error.type,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          msg: null,\r\n          type: null,\r\n        });\r\n      }\r\n    }\r\n    const { isAuthenticated } = this.props;\r\n    if (this.state.isOpen) {\r\n      if (isAuthenticated) {\r\n        this.toggle();\r\n      }\r\n    }\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n    });\r\n    this.props.clearError();\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { username, email, password } = this.state;\r\n    const newUser = {\r\n      username,\r\n      email,\r\n      password,\r\n    };\r\n\r\n    //attempt to register\r\n    this.props.register(newUser);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavLink href=\"#\" onClick={this.toggle}>\r\n          SignUp\r\n        </NavLink>\r\n        <Modal isOpen={this.state.isOpen} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>SignUp User</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <FormGroup>\r\n                <Label htmlFor=\"username\">Username</Label>\r\n                <Input\r\n                  type=\"username\"\r\n                  id=\"username\"\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Username\"\r\n                />\r\n                {this.state.type !== null && this.state.type === \"username\" ? (\r\n                  <small>{this.state.msg}</small>\r\n                ) : null}\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"email\">Email</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Email\"\r\n                />\r\n                {this.state.type !== null && this.state.type === \"email\" ? (\r\n                  <small>{this.state.msg}</small>\r\n                ) : null}\r\n                {this.state.type !== null && this.state.type === \"register\" ? (\r\n                  <small>{this.state.msg}</small>\r\n                ) : null}\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"password\">Password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Password\"\r\n                />\r\n                {this.state.type !== null && this.state.type === \"password\" ? (\r\n                  <small>{this.state.msg}</small>\r\n                ) : null}\r\n              </FormGroup>\r\n              <Button type=\"submit\" className=\"w-100\">\r\n                SignUp\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { register, clearError })(SignupModal);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { NavLink } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/actions/authActions\";\r\n\r\nclass Logout extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <NavLink onClick={this.props.logout} href=\"#\">\r\n          Logout\r\n        </NavLink>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { logout })(Logout);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport SigninModal from \"../auth/signinModal\";\r\nimport SignupModal from \"../auth/signupModal\";\r\nimport Logout from \"../auth/logout\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass AppNavbar extends Component {\r\n  state = {\r\n    isOpen: false,\r\n  };\r\n  toggle = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n    });\r\n  };\r\n  render() {\r\n    const { isAuthenticated, user } = this.props;\r\n    const authLink = (\r\n      <Fragment>\r\n        <NavItem>\r\n          <Logout />\r\n        </NavItem>\r\n      </Fragment>\r\n    );\r\n    const guestLink = (\r\n      <Fragment>\r\n        <NavItem>\r\n          <SigninModal />\r\n        </NavItem>\r\n        <NavItem>\r\n          <SignupModal />\r\n        </NavItem>\r\n      </Fragment>\r\n    );\r\n    return (\r\n      <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\r\n        <Container>\r\n          <NavbarBrand href=\"/\">Shopping List</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              {user ? (\r\n                <p className=\"welcome-text\">{`welcome ${user.username}`}</p>\r\n              ) : null}\r\n              {isAuthenticated ? authLink : guestLink}\r\n            </Nav>\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  user: state.auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppNavbar);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { addItem } from \"../../redux/actions/itemAction\";\r\n\r\nclass ItemModel extends Component {\r\n  state = {\r\n    modal: false,\r\n    name: \"\",\r\n  };\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n    });\r\n  };\r\n  setValueToState = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  onSubmitHandle = (event) => {\r\n    event.preventDefault();\r\n    this.props.addItem({ id: Math.random(), name: this.state.name });\r\n    this.toggle();\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          color=\"dark\"\r\n          style={{ marginBottom: \"2rem\" }}\r\n          onClick={this.toggle}\r\n        >\r\n          Add Item\r\n        </Button>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={this.onSubmitHandle}>\r\n              <FormGroup>\r\n                <Label htmlFor=\"name\">Shopping Item</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"item\"\r\n                  placeholder=\"Shopping List Item\"\r\n                  onChange={this.setValueToState}\r\n                />\r\n              </FormGroup>\r\n              <Button type=\"submit\" color=\"dark\">\r\n                ADD ITEM\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  item: state.item,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addItem })(ItemModel);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport { getItem } from \"../../redux/actions/itemAction\";\r\nimport ItemModel from \"./ItemModel\";\r\nimport { deleteItem } from \"../../redux/actions/itemAction\";\r\n\r\nclass ShoppingList extends Component {\r\n  componentDidMount = () => {\r\n    this.props.getItem();\r\n  };\r\n\r\n  remove = (id) => {\r\n    this.props.deleteItem(id);\r\n  };\r\n  render() {\r\n    const { items } = this.props.item;\r\n    const { isAuthenticated } = this.props;\r\n    const authContent = (\r\n      <Fragment>\r\n        <ItemModel />\r\n        <ListGroup>\r\n          <TransitionGroup className=\"shopping-list\">\r\n            {items.map((item) => (\r\n              <CSSTransition key={item._id} timeout={500} classNames=\"fade\">\r\n                <ListGroupItem>\r\n                  <Button\r\n                    className=\"remove-btn\"\r\n                    color=\"danger\"\r\n                    onClick={() => {\r\n                      this.remove(item._id);\r\n                    }}\r\n                  >\r\n                    &times;\r\n                  </Button>\r\n                  {item.item}\r\n                </ListGroupItem>\r\n              </CSSTransition>\r\n            ))}\r\n          </TransitionGroup>\r\n        </ListGroup>\r\n      </Fragment>\r\n    );\r\n    const unAuthMessage = (\r\n      <Fragment>\r\n        <h1>Please login or signup.</h1>\r\n      </Fragment>\r\n    );\r\n    return (\r\n      <Container>{isAuthenticated ? authContent : unAuthMessage}</Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  item: state.item,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getItem, deleteItem })(ShoppingList);\r\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport AppNavbar from \"./components/layout/AppNavbar\";\nimport ShoppingList from \"./components/dashboard/ShoppingList\";\nimport { loadUser } from \"./redux/actions/authActions\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.store.dispatch(loadUser());\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <AppNavbar />\n        <ShoppingList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { GET_ITEMS, ADD_ITEM, DELETE_ITEM } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n};\r\n\r\nexport default function (state = initialState, actions) {\r\n  switch (actions.type) {\r\n    case GET_ITEMS:\r\n      return {\r\n        ...state,\r\n        items: actions.payload,\r\n      };\r\n    case ADD_ITEM:\r\n      return {\r\n        ...state,\r\n        items: [...state.items, actions.payload.item],\r\n      };\r\n    case DELETE_ITEM:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter((item) => item._id !== actions.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/types\";\r\n\r\nconst intialState = {\r\n  type: null,\r\n  message: null,\r\n  status: null,\r\n  id: null,\r\n};\r\n\r\nexport default function (state = intialState, actions) {\r\n  switch (actions.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        message: actions.payload.msg,\r\n        status: actions.payload.status,\r\n        id: actions.payload.id,\r\n        type: actions.payload.type,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        message: null,\r\n        status: null,\r\n        id: null,\r\n        type: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  USER_LOADED,\r\n  USER_LOADING,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  LOGOUT_SUCCESS,\r\n  AUTH_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst intialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  isLoading: false,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = intialState, actions) {\r\n  switch (actions.type) {\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: actions.payload,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem(\"token\", actions.payload.token);\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: {\r\n          username: actions.payload.user.username,\r\n          email: actions.payload.user.email,\r\n        },\r\n      };\r\n    case LOGIN_FAIL:\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGOUT_SUCCESS:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport itemReducer from \"./itemReducer\";\r\nimport ErrorReducer from \"./errorReducer\";\r\nimport AuthReducer from \"./authReducer\";\r\n\r\nexport default combineReducers({\r\n  item: itemReducer,\r\n  auth: AuthReducer,\r\n  error: ErrorReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers/RootReducer\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store/store\";\n\nReactDOM.render(\n  <React.Fragment>\n    <Provider store={store}>\n      <App store={store} />\n    </Provider>\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}